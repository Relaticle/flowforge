function d({state:r}){return{state:r,columns:r.columns,currentColumn:null,isLoading:{},init:function(){},handleSortableEnd(e){let t=e.to.sortable.toArray(),a=e.item.getAttribute("x-sortable-item"),n=e.to.getAttribute("data-column-id"),o=e.item;o.style.opacity="0.7",o.style.pointerEvents="none";let s=t.indexOf(a),i=s>0?t[s-1]:null,c=s<t.length-1?t[s+1]:null;console.log("Flowforge Debug:",{cardId:a,targetColumn:n,cardIndex:s,newOrder:t,afterCardId:i,beforeCardId:c}),this.$wire.moveCard(a,n,c,i).then(()=>{o.style.opacity="",o.style.pointerEvents=""}).catch(()=>{o.style.opacity="",o.style.pointerEvents=""})},handleMoveSuccess(e,t,a){let n=document.querySelector(`[x-sortable-item="${e}"]`);n&&(n.classList.add("animate-kanban-card-success"),setTimeout(()=>{n.classList.remove("animate-kanban-card-success")},500))},handleMoveFailure(e,t){this.$dispatch("kanban-error",{message:t});let a=document.querySelector(`[x-sortable-item="${e}"]`);a&&(a.classList.add("animate-kanban-card-error"),setTimeout(()=>{a.classList.remove("animate-kanban-card-error")},500))},animateCardAdd(e){setTimeout(()=>{let t=document.querySelector(`[x-sortable-item="${e}"]`);t&&(t.classList.add("animate-kanban-card-add"),setTimeout(()=>{t.classList.remove("animate-kanban-card-add")},500))},300)},animateCardDelete(e){setTimeout(()=>{let t=document.querySelector(`[x-sortable-item="${e}"]`);t&&(t.classList.add("animate-kanban-card-delete"),setTimeout(()=>{t.classList.remove("animate-kanban-card-delete")},500))},300)},isLoadingColumn(e){return this.isLoading[e]||!1},beginLoading(e){this.isLoading[e]=!0}}}export{d as default};
